执行命令方式：[XXXX~]$ command(命令） [-options](选项） paramater1(参数1)  paramater2(参数2)

基础命令：
                 注销 exit
                 显示日期与时间 date
                 显示日历 cal
                 计算器 bc
                 退出 quit
                
                 Tab 命令补全；文件补齐
                 Ctrl + C 终止程序
                 Ctrl + D 结束输入

       
                 man 操作说明(manual)           man page中的数字代号：
                                                                                                      1.用户在shell环境中可以操作的命令或可执行文件
                                                                                                      2.系统内核可调用的函数与工具等
                                                                                                      3.一些常用的函数（function）与函数库（library），
                                                                                                         大部分为C的函数库（libc）
                                                                                                      4.设备文件的说明，通常在/dev下的文件
                                                                                                      5.配置文件或者是某些文件的格式
                                                                                                      6.游戏（games）
                                                                                                      7.惯例与协议等，例如Linux文件系统、网络协议、ASCII code等
                                                                                                      8.系统管理员可用的管理命令
                                                                                                      9.跟kernel有关的文件
                                                 man page大致分成下面几个部分：
                                                                                                      NAME                 简短的命令、数据名称说明
                                                                                                      SYNOPSIS          简短的命令执行语法（syntax）简介
                                                                                                      DESCRIPTION   较为完整的说明
                                                                                                      OPTIONS           针对SYNOPSIS中列举的所有可用的选项说明
                                                                                                      COMMANDS      当程序在执行的时候，可在程序中执行的命令
                                                                                                      FILES                 程序或数据所使用或参考或连接到的某些文件
                                                                                                      SEE ALSO         这个命令或数据有关的其他说明
                                                                                                      EXAMPLE          一些可参考的范例
                                                                                                      BUGS                是否有相关的错误
                                                 man page中的操作按键：
                                                                                         空格键（向下翻页）；↑ 、↓ （向上、下翻页）；
                                                                                         Home 、End（去第一、最后一页）；
                                                                                         /string （向下查字符串)； ?string （向上查字符串）；
                                                                                         n，N（在用 /，？查询字符串时，按此键来继续下一个查询）
                                                                                         q       结束 man page 
                                                                                         man -f  搜索命令（文件）完整名称
                                                                                         man -k 搜索命令（文件）关键字
                                                  更多关于man的信息可以使用man man来查询


                 在线求助文件 info page      类似man的操做说明：
                                                                                   空格键、↓ 向下翻页；↑ 向上翻页；Tab 在节点间移动；Enter 进入节点；
                                                                                   B/E 移动光标到info界面的第一个/最后一个节点处；
                                                                                   N（next）/P（prev） 前往下/上一个节点处；
                                                                                   U（up）回到上一层
                                                                                   S或 / 查询
                                                                                   H 显示求助菜单
                                                                                  ？ 命令一览表
                                                                                   Q 结束

                 /usr/share/doc目录下有各种软件程序服务的说明文档，很方便查询
                

                 文本编辑器 nano：
                                            在Linux中有许多文本编辑器，nano很简单，所有的操作健在屏幕下方都列出了，一看就知道
                                            Ctrl-G  取得在线帮助
                                            Ctrl-X  关闭nano
                                            Ctrl-O  保存
                                            Ctrl-R  提取，读入文件数据
                                            Ctrl-W  查询字符串
                                            Ctrl-C  说明光标所在的行数与列数
                                            Ctrl-_   输入行号，快速调转
                                            Ctrl-Y  矫正语法功能，开启或关闭
                                            Ctrl-M  可以支持鼠标移动光标                            


                  关机与重启：
                                      关机的惯用命令是shutdown。实际上是调用init , init 会clean up一些工作然后调用halt或者poweroff。
                                      重启，关机命令reboot，halt，poweroff。没有acpi的系统上，halt只是关闭了os，电源还在工作。
                                                                                                     而poweroff会发送一个关闭电源的信号给acpi。
                                      shutdown的语法规则为   /sbin/shutdown   [ -t 秒]   [-arkhncff]   时间  [警告消息]
                                                                        - t sec      计时多少秒后关机
                                                                        - k            发送警告消息，并不关机
                                                                        - r             关闭系统服务后重启
                                                                        - h            关闭系统服务，立即关机
                                                                        - n            不经过init ，直接以shutdown的功能关机
                                                                        - f             关机并开机后，强制略过 fsck 的磁盘检查
                                                                        - F            关机并开机后，强制执行 fsck 的磁盘检查
                                                                        - c            取消已经执行的shutdown命令
                                                                        时间         这是一定要加入的参数，指定系统关机的时间
                                                      shutdown  - h  now       此命令中now相当于时间为零
                                                                                                                                               
                                                                       
                 数据同步写入磁盘： sync        由于特殊原因，无法正常关机，sync命令将内存中的数据存入硬盘就变得至关重要。  

     
重新设置root密码的方法：
                                         重启系统，在系统选择界面，按下 e 进入编辑模式
                                         在 kernel 行的末尾添加输入single
                                         kernel /initrd-2.6.18-128.e15 ro root=LABEL=/ rhgb quiet single
                                         按下回车，接下来按下 B 进入单用户维护模式，在此模式下，不输入密码即可获取终端的 rooot 控制权
                                         输入 passwd ，修改 root 密码


文件权限
               执行 ls -al 会看到所有文件的属性，
               排列方式如下：
                                        文件权限  连接数  文件所有者 文件所属用户组  文件大小  文件最后被修改的时间  文件名
               其中，
               第一列代表这个文件的类型与权限。第一个字符代表文件类型：
                                                                                                                   d 是目录
                                                                                                                   -  是文件
                                                                                                                   l  是连接文件 ( linkfile )
                                                                                                                   b 是设备文件内的可供存储的接口设备
                                                                                                                   c 是设备文件内的串行端口设备
                                                                         接下来的字符中，以 3 个为一组，且均为 rwx 的 3 个参数的组合。read, write, execute
                                                                         这三个权限的位置不会变，如果没有权限，就会显示 - 
                                                                         第一组权限为文件所有者的权限，第二组为同用户组的权限，第三组为其他非本用户组
                                                                         的权限
               第二列表示有多少文件名连接到此节点。
               第三列表示这个文件或目录的所有者
               第四列表示这个文件的所属用户组
               第五列为这个文件的容量大小，默认单位B
               第六列为这个文件的创建日期或者是最近的修改日期
               第七列为该文件名。如果文件名前有一个句点，说明该文件为隐藏文件


改变文件属性与权限
                                 chgrp   ：改变文件所属用户组
                                                 要被改变的组名必须在 /etc/group 文件内存在才行，否则就会显示错误

                                 chown ： 改变文件所有者
                                                 在 /etc/passwd 文件中有记录的用户名才能改变

                                 chmod ：改变文件的权限
                                                通过数字类型改变文件权限。各权限的分数对照表如下，
                                                                        r ：4
                                                                       w ：2
                                                                        x ：1
                                                                       每种身份（owner, group, others ）各自的三个权限 rwx 分数累加，组成一组数字，
                                                                       例如770
                                                
                                                通过符号类型改变文件权限。用 u, g, o 来代表 3 种身份，用 r, w, x 代表读、写和运行的权限
                                                使用 + 、- 、= 来增加、减少和赋予文件权限

                                 -R  ：进行递归（recursive）的持续更改。可在改变文件属性与权限时使用，连同子目录下的所有文件都会更改


权限对目录的重要性
                                 目录的内容是记录文件名列表，文件名与目录有强烈的关联
                                 r 表示具有读取目录结构列表的权限，可以查询该目录下的文件名数据
                                 w 表示具有更改目录结构列表的权限：
                                                                                             新建新的文件与目录
                                                                                             删除已经存在的文件与目录（不论文件权限如何）
                                                                                             将已经存在的文件或目录重新命名
                                                                                             转移该目录内的文件、目录位置
                                 x 代表的是用户能否进入该目录成为工作目录。如果不具有目录的 x 权限，就无法切换到该目录下执行任何命令
                                 cd 命令可切换目录
                                 mkdir 命令新建目录
                                 touch 命令新建空文件夹


文件种类
               目录 directory                                                                                                                                 第一个属性为d

               连接文件 link                                                                                                                                   第一个属性为l

               设备与设备文件 device：
                                                      块 block 设备文件：存储数据，以提供系统随机访问的接口设备            第一个属性为b

                                                      字符 character 设备文件：串行端口的接口设备                                      第一个属性为c

               套接字 sockets     使应用程序能读写和收发通讯协定与资料的程序                                               第一个属性为s

               管道 FIFO, pipe    FIFO是一种特殊的文件类型，它主要的目的在于解决多个程序                        第一个属性为p
                                            同时访问一个文件所造成的错误问题。FIFO是 first-in-first-out 的缩写


Linux 文件扩展名
                            *.sh                                                       脚本或批处理文件
                            *Z, *.tar, *.tar.gz, *.zip, *.tgz                  压缩文件
                            *.html, *.php                                          网页相关文件

Linux 文件长度限制
                               在Linux下，使用默认的 Ext2/Ext3 文件系统时，
                               针对文件的文件名长度限制为：
                                                                                单一文件或目录的最大容许文件名为 255 个字符
                                                                                包含完整路径名称及目录的完整文件名为 4096 个字符
                               （个人感觉，Linux文件名与完整路径超级长虽然打字很多但是快于鼠标点击打开的速度）

Linux 文件名的限制
                               避免使用特殊字符，如* ? > < ; & ! [ ] | \ ' " ` ( ) { }
                               也避免以 - + 开头
        

Linux 目录配置标准：
                                   Filesystem Hierachy Standard (FHS)
                                   FHS 标准的重点在于规范每个特定的目录下应该要防止什么种类的数据

                                   FHS 定义根目录 （/） 下应该有下面这些子目录的存在：
                                   /bin       放置在单用户维护模式下能被操作命令
                                   /boot     放置开机时会使用的文件，包括Linux内核文件以及开机菜单与开机所需配置文件等
                                   /etc       系统主要的配置文件几乎都放置在这个目录内，例如账号密码文件、各种服务的起始文件
                                   /dev      所有的设备与接口设备都是以文件的形式存在于这个目录下
                                   /home   系统默认的用户主文件夹
                                   /lib        放置开机时会用到的函数库，以及在 /bin 或 /sbin 下面的命令会调用的函数库
                                   /media  放置可删除的媒体设备。包括软盘、光盘、DVD等设备都暂时挂在于此
                                   /mnt      暂时挂在某些额外的设备
                                   /opt       给第三方软件放置的目录
                                   /root      系统管理员的主文件夹
                                   /sbin      开机、修复、还原系统所需要的命令
                                   /srv        service 的缩写，一些网络服务所需要取用的数据目录
                                   /tmp      一般用户或正在执行的程序暂时放置文件的地方。任何人都能访问，FHS建议开机清除数据
                                   

几个非标准定义目录
                          /lost+found      此目录是使用标准的 ext2/ext3 文件系统格式才会产生的一个目录，目的在于当文件系统发生错误时，
                                                  将一些丢失的片段放置在这个目录下。这个目录通常会在分区的最顶层。
                          /proc                此目录本身是一个虚拟文件系统。它放置的数据都是在内存当中，不占任何硬盘空间
                          /sys                 与/proc 类似，也是一个虚拟文件系统，主要也是记录与内核相关的信息，同样不占硬盘空间


必须在根目录下的目录
                                     /etc         配置文件
                                     /bin         执行重要文件
                                     /dev        所需要的设备文件
                                     /lib          执行文件所需的函数库与内核所需的模块
                                     /sbin       重要的系统执行文件


/usr的意义与内容
                             usr 是UNIX Software Resource 的缩写，即UNIX　操作系统软件资源
                             所有系统默认的软件都会放置在 /usr 下面
                             依据 FHS 的定义，/usr内放置的数据属于可分享的与不可变动的。即可分享给其他主机使用
         
                             /usr/bin/          绝大部分的用户可使用命令都放在这里。
                             /usr/include/    C/C++ 等程序语言的头文件与包含文件放置处
                             /usr/lib            包含个应用软件的函数库、标准文件、目标文件，以及不被一般用户惯用的执行文件或脚本
                             /usr/local/       系统管理员在本机自行安装自己下载的软件，建议安装到此目录，便于管理
                             /usr/sbin/        非系统正常运行所需要的系统命令。常见的有网络服务器软件的服务命令
                             /usr/share       防止共享文件的地方。 如 man, doc, zoneinfo
                             /usr/src/          一般远吗建议放在这里。至于内核源码建议放在/usr/src/linux/ 目录下


/var 的意义与内容
                             /var目录主要针对常态性变动的文件，包括缓存、登陆文件、以及某些软件运行所产生的文件，包括程序文件，
                             或 MySQL数据库的文件等

                             /var/cache/     应用程序本身运行过程中会产生的一些暂存文件
                             /var/lib/           程序本身执行的过程中，需要使用到的数据文件放置的目录，在此目录下各软件应该有各自的目录
                             /var/lock         某些设备或是文件资源一次只能被一个应用程序使用，因此要将该设备上锁
                             /var/log/          这是登陆文件放置的目录
                             /var/mail/        放置个人电子邮件信箱的目录。此目录也被放置在/var/spool/mail/ 中，通常两个目录是连接文件
                             /var/run/         某些程序或者是服务启动后，会将它们的 PID 放置在这个目录下
                             /var/spool       通常放置一些队列数据


目录树
           附一张图吧

         
                                                                                               目录树架构示意图
                                                              

绝对路径与相对路径
                                绝对路径：由根目录 / 开始写起的文件名或目录名称
                                相对路径：相对于目前路径的文件名写法


Linux 内核版本的查看                            
                                   uname -r



目录的相关操作
                          .                代表当前目录，也可以用 ./ 来表示
                          ..               代表上一层目录，也可以用 ../ 来表示
                          -                代表前一个工作目录
                          ~               代表目前用户身份所在的主文件夹
                          ~account  代表account用户的主文件夹
                          cd             切换目录
                          pwd          显示当前目录                           pwd -p  显示当前路径，而非使用连接 （link） 路径
                          mkdir        新建一个新的目录                    -p  直接将所需要的目录（包括上层目录）递归创建起来
                                                                                            -m  配置目录的权限。
                          rmdir        删除一个空的目录                    rmdir -p  连同上层的空目录一起删除


$PATH
           关于执行文件路径的变量

           当执行一个命令时，系统会依照PATH的设置去每个PATH定义的目录下查询可执行文件，如果在PATH定义的目录中，
           含有多个同名的可执行文件，那么先查询到的同名命令先被执行

           PATH这个变量的内容是由一堆目录组成的，每个目录中间用冒号：来隔开

           不同身份用户默认的PATH不同，默认能够随意执行的命令也不同。
       
           PATH是可以修改的，所以一般用户还是可以通过修改PATH来执行某些位于/sbin 或/usr/sbin 下的命令查询
 
           使用绝对路径或相对路径直接指定某个命令的文件名来执行，会比查询PATH准确

           本目录 . 最好不要放在PATH中，不安全。


查看文件与目录：ls
                            参数：
                                      -a                                      全部文件，连同隐藏文件一起列出来
                                      -A                                      列出全部文件，但不包括 . 和 .. 这两个目录
                                      -d                                      仅列出目录本身，而非目录内的文件数据
                                      -f                                       列出结果，默认以文件名排序
                                      -F                                      根据文件、目录等信息给予附加数据结构。例如，
                                                                                * 代表可执行文件    / 代表目录    = 代表 socket 文件    | 代表 FIFO 文件
                                      -h                                      将文件容量以易读的方式列出来
                                      -i                                       列出 inode 号码
                                      -l                                       列出长数据串，包含文件的属性与权限的数据
                                      -n                                      列出 UID 与 GID，而非用户与用户组的名称
                                      -r                                      将排序结果反向输出
                                      -R                                     连同子目录内容一起列出来，等于该目录下的所有文件都会显示出来
                                      -S                                     以文件容量大小排序，而不是用文件名排序
                                      -t                                      依时间排序
                                      --color=never                   不依据文件特性给予颜色显示
                                      --color=always                 显示颜色
                                      --color=auto                     让系统自行依据设置来判断是否给予颜色
                                      --full-time                         以完整时间模式输出
                                      --time={atime, ctime}       输出访问时间或改变权限属性时间，而不是内容更改时间


复制、删除与移动
                             复制文件，使用 cp 命令。除复制外，还可以创建连接文件，对比两个文件新旧而予以更新，以及复制整个目录
                             移动目录和文件，使用 mv 命令，也可直接用于重命名操作
                             删除用的是 rm 命令

                             cp：复制文件或目录
                                   cp     [ -adfilprsu ]      源文件（source）       目标文件（destination）
                                   cp     [ option ]      source1   source2   source3    source4   .....    directory

                                   -a  相当于 pdr
                                   -d  若源文件为连接文件的属性，则复制连接文件属性而非文件本身
                                   -f   force 强制，若目标文件已经存在且无法开启，则删除后再尝试一次
                                   -i   若目标文件已经存在，在覆盖是会先询问操作的进行。  常用命令
                                   -l   进行硬连接的文件创建，而非复制文件本身
                                   -p  连同文件的属性一起复制过去，而非使用默认属性
                                   -r   递归持续复制，用于目录的复制行为
                                   -s  复制成为符号连接文件，即快捷方式文件
                                   -    若 destination 比 source 旧才更新 destination
                                   
                                   需要注意的是，如果源文件有两个以上，则最后一个目的文件一定要是目录     

                                   在默认的条件下，cp 的原文件与目的文件的权限是不同的，目的文件的所有者通常是命令操作者本身。

                             rm：移除文件或目录
                                   -f  force, 忽略不存在的文件，不会出现警告信息
                                   -i  互动模式，在删除前会询问用户是否操作
                                   -r  递归删除，常用在目录的删除
                                   有几个细节在书上标了重点不记录了

                            rm：移动文件、目录，或更名
                                   -f  force 强制，如果目标文件已经存在，不会询问而直接覆盖
                                   -i  若目标文件已经存在时，就会询问是否覆盖
                                   -u 若目标文件已经存在，且 source 比较新，才会更新
                                   
                                   直接移动文件到本目录下就会完成更名
                                   rename 命令对多个文件同时命名


取得路径的文件名与目录名
                                           basename/dirname


文件内容查阅
                      cat （concatenate）由第一行开始显示内容
                            -A  相当于-vET的整合参数，可列出一些特殊字符
                            -b  列出行号，空白行不标行号
                            -E  将结尾的断行字符 $ 显示出来
                            -n  打印出行号，连同空白行也会有行号，与-b的参数不同
                            -T  将Tab按键以^T显示出来
                            -v  列出一些看不出来的特殊字符

                      tac  反向列示

                      nl  添加行号打印
                          -b  指定行号指定的方式，主要有两种：
                                                                                        -b a  表示不论是否有空行，也同样列出行号
                                                                                        -b t   如果有空行，空的一行不列出行号
                          -n  列出行号表示的方法，主要有三种：
                                                                                        -n ln  行号在屏幕的最左方显示
                                                                                        -n rn （是r和n）行号在自己字段的最右方显示，且不加0
                                                                                        -n rz  行号在自己字段的最右方显示，加0
                          -w  行号字段占用的位数


可翻页查看文件内容的方式
                                           more  
                                                    空格键       向下翻一页
                                                    Enter         向下滚动一行
                                                    /字符串      向下查询字符串
                                                    :f                立即显示文件名以及目前的行数
                                                    q                离开 more
                                                    b/Ctrl-b      往回翻页，但此命令对管道无用
    
                                           less
                                                  空格键  向下翻页
                                                  PageDown   翻页
                                                  PageUp
                                                  /字符串  向下查询字符串
                                                  ?字符串 向上查询字符串
                                                  n           重复前一个查询（字符串查询）
                                                  N           反响重复前一个查询
                                                  q            退出


数据选取
              head  取出前面几行
              tail      取出后面几行

非纯文本文件查阅     od
                                      -t ：后面接各种类型的输出命令
                                          a  使用默认的字符输出
                                          c  使用 ASCII 字符输出
                                          d[size]  使用十进制输出，每个整数占用 size 字节
                                          f[size]  使用浮点数输出，每个数占用 size 字节
                                          o[size]  使用八进制输出，每个整数占用 size 字节
                                          x[size]  使用十六进制输出，每个字节占用 size 字节


修改文件时间或创建新文件
                                           modification time(mtime)  当文件的内容更改时，会更新此时间
                                           status time(ctime)   当文件的状态，如权限与属性被改变时，会更新此时间
                                           access time(atime)  当文件的内容被取用时，会更新此时间
                                           在默认的情况下，ls 显示的时间是文件的 ctime

                                           touch命令：
                                                              -a  修改访问时间
                                                              -c  修改文件时间，若此文件不存在则不创建新文件
                                                              -d  后面可以接修改的日期而不用目前的日期，也可以用 --date=
                                                              -m 仅修改mtime
                                                              -t   后面可以接与修改的时间而不用目前的时间，格式为 YYMMDDhhmm





书本以外的日常使用中遇到的问题解决办法容易忘记记在这里

VIM 编辑器具有高亮功能，系统自带配色解决方案：
cd  /usr/share/vim/vim74/colors
用VIM打开：
vim ~/.vimrc
输入配色方案名，不含 .vim 扩展名
保存，退出
